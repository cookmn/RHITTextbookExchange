{
  "name": "rosefire-node",
  "version": "2.1.0",
  "description": "The node SDK for rosefire",
  "main": "index.js",
  "scripts": {},
  "repository": {
    "type": "git",
    "url": "git@ada.csse.rose-hulman.edu:rosefire/node-sdk.git"
  },
  "author": {
    "name": "Tyler Rockwood"
  },
  "license": "MIT",
  "dependencies": {
    "jsonwebtoken": "^5.7.0"
  },
  "gitHead": "d51ec0d069816b2517ff23646e434de6e409dcd5",
  "readme": "# Rosefire Node SDK\r\n \r\n![Node](https://img.shields.io/badge/node-v2.0.0beta-darkgreen.svg)\r\n\r\n## Overview \r\n\r\nThis is the node library to handle auth tokens generated by the rosefire server. You'll need this if you want to use Rose-Hulman as an authentication service.\r\n\r\nIf you use these libraries, you can either do everything server-side, or you get fetch the tokens using the client libraries, then pass the returned token to your backend and decrypt it on your server. In this case, the SECRET that you use when you [register](https://rosefire.csse.rose-hulman.edu) is whatever you want, but you'll need to use it as a key on your server.\r\n\r\nTo learn more about how Rosefire works checkout [this link](https://jwt.io/introduction/).\r\n\r\n### A Note About Security\r\n\r\n**IMPORTANT:** Because token verifier requires your secret, you should only verify\r\ntokens on *trusted servers*. Never embed your Secret directly into your application and\r\nnever share your Secret with a connected client. Only your registry token is safe to share with clients.\r\n\r\n## Usage\r\n\r\n```bash\r\nnpm install --save git+https://ada.csse.rose-hulman.edu/rosefire/node-sdk.git#2.0.0beta\r\n```\r\n\r\nThis is a simple express endpoint that decodes a token from Rosefire, and returns the auth data.\r\n\r\n```node\r\nvar RosefireTokenVerifier = require('rosefire-node');\r\n\r\nvar rosefire = new RosefireTokenVerifier(SECRET);\r\n\r\napp.post('/foobar', function (req, res) {\r\n  var token = req.headers.authorization;\r\n  if (!token) {\r\n    res.status(401).json({\r\n      error: 'Not authorized!'\r\n    });\r\n    return;\r\n  }\r\n  token = token.split(' ')[1]; \r\n  rosefire.verify(token, function(err, authData) {\r\n    if (err) {\r\n      res.status(401).json({\r\n        error: 'Not authorized!'\r\n      });\r\n    } else {\r\n      console.log(authData.username); // rockwotj\r\n      console.log(authData.issued_at); // <Date Object of issued time> \r\n      console.log(authData.group); // STUDENT (Only there if options asked)\r\n      console.log(authData.expires) // <Date Object> (Only there if options asked)\r\n      res.json(authData);\r\n    }\r\n  });\r\n};\r\n\r\n```\r\n\r\n",
  "readmeFilename": "README.md",
  "_id": "rosefire-node@2.1.0",
  "_shasum": "0e5804dc40bfbf472b35e50c560429cf35753ec1",
  "_from": "git+https://ada.csse.rose-hulman.edu/rosefire/node-sdk.git#2.1.0",
  "_resolved": "git+https://ada.csse.rose-hulman.edu/rosefire/node-sdk.git#d51ec0d069816b2517ff23646e434de6e409dcd5"
}
